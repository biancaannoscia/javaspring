Assignment2 Part2

The main directory for this is spring-hibernate-2pt2. 

The Application Config file is found within spring-hibernate-2pt2/src/main/java/com/assignment2/part2/app/config/AppConfig.java

The jdbc.properties file is located: 
spring-hibernate-2pt2/src/main/resources/db 

ddl.sql, shcema.sql and test-data.sql are all found here: 
spring-hibernate-2pt2/src/main/resources/sql

images/2.table_view displays my Category, Book, Author and Author_Book table content

Once the database is set up, we can move onto the application itself.

The app directory below contains my main test driver classes
spring-hibernate-2pt2/src/main/java/com/assignment2/part2/app

The dao directory below contains an interface describing the application
functionality and its implementation
spring-hibernate-2pt2/src/main/java/com/assignment2/part2/app/dao
BookCategoryDaoImpl.java is my DAO class here. It contains my datasource as well as 
calls to each of the classes under the crud directory that will execute the different 
application implementations

The domain directory below contains my Author, Category and Book beans 
spring-hibernate-2pt2/src/main/java/com/assignment2/part2/app/domain

images/2.directory_structure shows my directory structure

find all books without authors and categories:
developed with createQuery(…) method
app/FindAllWithCatAuthApp.java is the main driver class.
dao/BookCategoryDaoImpl.findAllWithoutCatAuth() is the method responsible
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run: java -jar ./target/find-all-demo.jars
images/2.find-all-books-without-authors-and-categories should show you the result of running this

find all books with authors and categories:
developed with getNamedQuery(…) without parameter(s).
app/FindAllWithCatAuthApp.java is the main driver class.
dao/BookCategoryDaoImpl.findAllWithCatAuth() is the method responsible
domain/Book.java hosts the query that grabs the data
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run: java -jar ./target/find-all-with-cat-auth.jar
images/2.find-all-with-authors-and-categories should show you the result of running this

find a book with authors and category by book's ID:
developed with getNamedQuery(…) with parameter(s)
app/FindBookWithCatAndAuthApp.java is the main driver class. I chose book ID = 1 as the argument to pass in, which is Romeo and Juliet
dao/BookCategoryDaoImpl.findBookWithAuthorAndCategoriesByID() is the method responsible
domain/Book.java hosts the query that grabs the data
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run: java -jar ./target/find-book-with-cat-auth.jar
images/2.find-book-with-authors-and-categories should show you the result of running this

find all books by author id
developed with getNamedQuery(…) with parameter(s)
app/FindBooksByAuthIdApp.java is the main driver class
dao/BookCategoryDaoImpl.findAllWithCatAuthMultBookPerAuthId() is the method responsible, I chose author.id = 2, or J.K. Rowling as my author since the Book table contains more than 1 of her books
domain/Book.java hosts the query that grabs the data
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run:
images/2.find-book-by-auth-id should show you the result of running this

Create a new book with a new author(s) not persisted yet in your database. 
InsertBookWithNewAuthApp.java is the main driver class
dao/BookCategoryDaoImplsaveWithNewAuth() is the method responsible
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run: java -jar ./target/insert-book.jar
images/2.insert-book should show you the result of running this, you can see the new book "of mice and men" and new author "john steinbeck" listed
images/2.tables-after-insert shows you the tables after the new book and author have been inserted

Delete the saved book and author(s) from the database
DeleteBookAndAuthApp.java is the main driver class
dao/BookCategoryDaoImpl.Delete() is the method responsible
cd into spring-hibernate-2pt2 and run: mvn clean install
once this is done, run: java -jar ./target/delete-book.jar
images/2.delete should show you the result of running this, as you can see, the new book "of mice and men" and new author "john steinbeck" is no longer listed
images/2.tables-after-delete shows the tables after the new book and author have been deleted




