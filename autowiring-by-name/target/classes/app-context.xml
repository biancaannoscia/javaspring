<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="bookFrost" class="com.assignmentone.partone.two.byname.Book">
		<constructor-arg value="16" type="Long"></constructor-arg>
		<constructor-arg value="627472451" type="String"></constructor-arg>
		<constructor-arg value="Frost Poetry" type="String"></constructor-arg>
		<constructor-arg value="12.34" type="Float"></constructor-arg>
	</bean>
    
<!-- This bean specifies  class="com.assignmentone.partone.two.byname.Category 
	which means we will be analyzing Category.java. Since we specify autowire="byName",
	then we will be searching this class for any properties that have names matching the bean ids
	of beans within this file. So if Category.java has a property named bookFrost, then the bean above
	will get injected into that property -->       
    <bean id="targetByName" autowire="byName" class="com.assignmentone.partone.two.byname.Category"
        lazy-init="true"
       />

</beans>
